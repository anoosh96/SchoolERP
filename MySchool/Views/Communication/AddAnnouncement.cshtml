@model MySchool.Models.Announcements

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
    <title>AddAnnouncement</title>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <link rel="stylesheet" href="~/Content/navbar.css" type="text/css" />
    <script>
/* When the user clicks on the button,
toggle between hiding and showing the dropdown content */
        function myFunction(id) {

            var dropdowns = document.getElementsByClassName("dropdown-content");
            var i;
            for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
            }
  document.getElementById("myDropdown"+id).classList.toggle("show");
}

// Close the dropdown if the user clicks outside of it
window.onclick = function(event) {
  if (!event.target.matches('.dropbtn')) {
    var dropdowns = document.getElementsByClassName("dropdown-content");
    var i;
    for (i = 0; i < dropdowns.length; i++) {
      var openDropdown = dropdowns[i];
      if (openDropdown.classList.contains('show')) {
        openDropdown.classList.remove('show');
      }
    }
  }
}
    </script>

   
    <script>
        $(document).ready(function () {
            /*var data = JSON.stringify({
                'id': 't0051'
            });*/
            $.ajax({
                type: "GET",
                url: '@Url.Action("getTeacherClasses","User")',
                data: {id:'@Session["username"].ToString()'},
                success: function (list) {
                    var s = '<option value="-1">Please Select a Class</option>';
                    for (var i = 0; i < list.length; i++) {
                        s += '<option value="' + list[i].ClassID + '">' + list[i].ClassID + '</option>';
                    }
                    $('#classid').html(s);
                }
            });
        });

    </script>
    <style>
        * {
  box-sizing: border-box;
}

        body {
            font-family: Arial, Helvetica, sans-serif;
        }


        .panel-heading {
            font-size: 20px;
            background-color: orangered;
            color: white;
            padding: 10px 15px;
            border-bottom: 1px solid transparent;
            border-top-left-radius: 3px;
            border-top-right-radius: 3px;
        }

        /* Style the header */
        header {
            background-color: #00004d;
            padding-top: 1px;
            padding-bottom: 1px;
            text-align: left-center;
            font-size: 32px;
            color: white;
        }
        /* Container for flexboxes */
        section {
            display: -webkit-flex;
            display: flex;
        }

       


        /* Style the content */
        article {
            -webkit-flex: 3;
            -ms-flex: 3;
            flex: 3;
            background-color: #ffff99;
            padding-bottom: 800px;
            margin-left: -100px;
        }

        /* Style the footer */
        footer {
            background-color: #777;
            padding: 10px;
            text-align: center;
            color: white;
        }

        /* Responsive layout - makes the menu and the content (inside the section) sit on top of each other instead of next to each other */


        .container {
            border-radius: 5px;
            background-color: #f2f2f2;
            margin:100px;
            padding: 20px;
            max-width:50%;
            font-family:Verdana;
            font-size:small;
            
        }

        .col-25 {
            float: left;
            width: 25%;
            margin-top: 6px;
        }

        .col-75 {
            float: left;
            width: 75%;
            margin-top: 6px;
        }

        /* Clear floats after the columns */
        .row:after {
            content: "";
            display: table;
            clear: both;
        }


        input[type=date], select {
            width: 30%;
            padding: 12px 20px;
            margin-top: 15px;
            margin-left: 15px;
            margin-right: 20px;
            margin-bottom: 10px;
            display: inline-block;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        input[type=text], select, textarea {
  width: 100%;
  padding: 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
  resize: vertical;
}


        input[type=text], select {
            width: 30%;
            padding: 12px 20px;
            margin: 10px 0;
            display: inline-block;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        input[type=submit] {
  background-color: #4CAF50;
  color: white;
  padding: 12px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  float: right;
}

        label {
  padding: 12px 12px 12px 0;
  display: inline-block;
}
        input[type=text]#search {
            float: right;
            margin-top: -41px;
            margin-right: 1px;
            width: 135px;
            box-sizing: border-box;
            border: 2px solid #ccc;
            border-radius: 4px;
            font-size: 15px;
            background-color: white;
            background-image: url('searchicon.png');
            background-position: 10px 10px;
            background-repeat: no-repeat;
            padding: 5px 10px 5px 10px;
            -webkit-transition: width 0.4s ease-in-out;
            transition: width 0.4s ease-in-out;
        }

        input[type=text]:focus#search {
            width: 20%;
        }

 
        @@media screen and (max-width: 600px) {
  .col-25, .col-75, input[type=submit] {
    width: 100%;
    margin-top: 0;
  }
}
        .text-danger{
            color:red;
        }

        input[type=submit]:hover {
            background-color: #45a049;
        }

        



        img {
            float: left;
            margin-top: -1px;
        }

        .box {
            width: 300px;
            height: 100px;
            margin: 19px 17px;
            background: white;
            display: inline-block;
        }

       

        .button#b1 {
            background-color: #4CAF50;
            border-radius: 2px;
            color: white;
            padding: 10px 30px;
            text-align: center;
            text-decoration: none;
            display: block;
            font-size: 16px;
            margin: 40px 2px;
            cursor: pointer;
            width: 10%;
            float: right;
        }

        li:hover .dropdown {
            display: block;
        }
    </style>
</head>


<body>
    <header>
        <a href='@Url.Action("TeacherHome","User")'><img src="~/Content/images/new logo 5.jpg" style="border-radius:5px; width:203px;height:124px;"></a>
        <b style="position:absolute;right:35px;top:20px;font-size:20px;">Teacher</b>

        <a href='@Url.Action("Login","User")' class="button" id="b1">Logout</a>
        <h4 style="text-align:left; margin-left: 300px;"> <b>Welcome To FGS</b> Management System</h4>
        <input type="text" id="search" name="search" placeholder="Search..">

    </header>

    <section>
        <nav>
            <ul>








                <li>
                    <div class="dropdown">
                        <button onclick="myFunction('5')" class="dropbtn">
                             Announcements &#9660</button>
                        <div id="myDropdown5" class="dropdown-content">
                            @Html.ActionLink("Add Announcement", "AddAnnouncement", "Communication")
                            @Html.ActionLink("View General Announcements", "ViewGeneralAnnouncements", "Communication")
                        </div>

                    </div>



                    <hr />
                </li>

                <li>
                    <div class="dropdown">
                        <button onclick="myFunction('8')" class="dropbtn">Result &#9660</button>
                        <div id="myDropdown8" class="dropdown-content">
                            @Html.ActionLink("View Result", "ViewResultTeacher", "Result")
                            @Html.ActionLink("Add Result", "AddResult", "Result")

                        </div>

                    </div>



                    <hr />
                </li>


                <li>

                    <div class="dropdown">
                        <button onclick="myFunction('6')" class="dropbtn">Time Table &#9660</button>
                        <div id="myDropdown6" class="dropdown-content">

                            @Html.ActionLink("View Schedule", "ViewScheduleTeacher", "Schedule")
                        </div>

                    </div>
                    <hr />
                </li>




                <li>
                    <div class="dropdown">
                        <button onclick="myFunction('7')" class="dropbtn">Attendance &#9660</button>
                        <div id="myDropdown7" class="dropdown-content">
                            @Html.ActionLink("View Attendance", "ViewAttendanceTeacher", "Attendance")
                            @Html.ActionLink("Mark Attendance", "MarkAttendance", "Attendance")
                        </div>

                    </div>
                    <hr />
                </li>
            </ul>

        </nav>

        <article>

            <div class="panel-heading">
                <b>Add New Announcement</b>
            </div>

            <div class="container">
                @using (Html.BeginForm())

                {
                                        <!--<form role="form" action="Create" method="post">-->
                    @Html.AntiForgeryToken()

                    

                    <div class="row">
                        <div class="col-25">
                            <label for="class"><b>Class<b></b></label>
                        </div>
                        <div class="col-75">
                            
                            <select id="classid" name="ClassID"></select>
                            @Html.ValidationMessageFor(m => m.Class.ClassID)
                        </div>
                    </div>

                   




                    <div class="row">
                        <div class="col-25">
                            <label for="lname"><b>Topic</b> </label>
                        </div>
                        <div class="col-75">
                            <input type="text" id="lname" name="Topic" placeholder="Topic..">
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-25">
                            <label for="uid"><b>User ID</b> </label>
                        </div>
                        <div class="col-75">
                            <input type="text" id="uidd" name="UserID" placeholder="User ID..">
                            @Html.ValidationMessageFor(m => m.userID, "", new { @class = "text-danger" })


                        </div>
                    </div>

                    <div class="row">
                        <div class="col-25">
                            <label for="message"><b>Message</b></label>
                        </div>
                        <div class="col-75">
                            <textarea id="subject" name="Message" placeholder="Write something.." style="height:200px"></textarea>
                        </div>
                    </div>
                    <div class="row">
                        <input type="submit" value="Submit">
                    </div>
                }

                </div>
</article>




        </section>
</body>
</html>
